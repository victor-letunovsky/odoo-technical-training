<?xml version="1.0" encoding="UTF-8"?>
<odoo>
    <record id="estate-property-1" model="estate.property">
        <field name="name">Big Villa</field>
        <!-- ref is a valid `external id` mostly for `Many2one` and `Reference` fields
             ref is composed of module dot id (just the id if the same module).
        -->
        <field name="property_type_id" ref="estate-property-type-1"/>
        <field name="state">new</field>
        <field name="description">A nice and big villa</field>
        <field name="postcode">12345</field>
        <field name="date_availability">2020-02-02</field>
        <field name="expected_price">1600000</field>
        <field name="bedrooms">6</field>
        <field name="living_area">100</field>
        <field name="facades">4</field>
        <field name="garage">True</field>
        <field name="garden">True</field>
        <field name="garden_area">100000</field>
        <field name="garden_orientation">s</field>
    </record>
    <data noupdate="1">
        <record id="estate-property-2" model="estate.property">
            <field name="name">Trailer home</field>
            <field name="property_type_id" ref="estate-property-type-1"/>
            <field name="state">canceled</field>
            <field name="description">Home in a trailer park</field>
            <field name="postcode">54321</field>
            <field name="date_availability">1970-01-01</field>
            <field name="expected_price">100000</field>
            <field name="selling_price">120000</field>
            <field name="bedrooms">1</field>
            <field name="living_area">10</field>
            <field name="facades">4</field>
            <field name="garage">False</field>
            <!-- It's just an example.
                 It's better to fill offer data through the similar data file like 'estate.property.offer.xml'
            <field name="offer_ids" eval="[
                Command.create({
                    'price': 110000,
                    'partner_id': ref('base.res_partner_3'),
                    'validity': 31
                }),
                Command.create({
                    'price': 120000,
                    'partner_id': ref('base.res_partner_4'),
                    'validity': 32
                }),
                Command.create({
                    'price': 130000,
                    'partner_id': ref('base.res_partner_10'),
                    'validity': 33
                }),
            ]"/>
            -->
        </record>
    </data>
    <record id="space_ship" model="estate.property">
        <field name="name">International Space Station</field>
        <field name="state">new</field>
        <field name="description">Aliens sometimes come visit</field>
        <field name="postcode">----</field>
        <field name="date_availability">2030-12-31</field>
        <field name="expected_price">45890000</field>
        <field name="property_type_id" ref="estate-property-type-3"/>
        <field name="salesperson" ref="base.user_admin"/>
    </record>

    <record id="cabin" model="estate.property">
        <field name="name">Cozy Cabin</field>
        <field name="state">new</field>
        <field name="description">Small cabin by lake</field>
        <field name="postcode">10000</field>
        <field name="date_availability" eval="str(datetime.now().year)+'-02-11'"/>
        <field name="expected_price">80000</field>
        <field name="bedrooms">1</field>
        <field name="living_area">10</field>
        <field name="facades">4</field>
        <field name="garage">False</field>
        <field name="garden">True</field>
        <field name="property_type_id" ref="estate-property-type-1"/>
        <field name="salesperson" ref="base.user_admin"/>
    </record>
</odoo>
